# @copyright (C) 2017 Melexis N.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prepare various compilers
language: c
sudo: required

# disable the default submodule logic (we use ssh locally)
git:
  submodules: false

env:
  global:
    - secure: "PFHiivb3mm5Ky4eGE1w73rLK2RE2QygkzblqCPa7tyOXfDSopIvTFXcTdM6NOx71Ih/0FNzepHduPtJrCNW23tXRq1hVkCcwn6DcxfNC9y/s6Bcui/eIJasSiNxAx9lG885/pYX5RB4Xv1edm0a7d0ZsGdcim9HNJvdHmYjCFDyP2oABdlhkx+7blTxyPpx0mgCDMBmrhJlqbCRZ70ZlpzYx42nJRuVyHY+DwN/2hI5jS1S3ZEaf0aaaOC1aV4Im29mW2EZ//TPzemjfPd0dr6pe9lmZHTsi3Abd37nFppVSA6mlX2IBxsYfqdAFN53khiuH4j5sdWgLlBryXya2sEJuiFJFj4TgTBzZQlYM5cZ1j6vToUJZaOtymrFNvOuJZEVRlZjj6DoPSvhlf0EjaLVfBccW78LHpZI4s/ukCdjK91Y1MUETvSY4JUc0kZYIMDD9yWDyk0j/4hhlbSKVqdWyYzTRPnmDGSUoFcuXJe/COYm4axtoiv1XkL9DJfVAJB7j/kK9zDCMMEP0n4S4ZpaIP4jTZkWMOhae5Tr5gOX0ruNpOBhviV7Z6cxLJy5kX/vMNo2GVzmGEEytdz0iMT4a/MUi6Xu6jqQD5kK1cDk0G2jZKhzds1b2MLVpZwVMXr/tvYhY+XlJ2Q9Jgwz/RJ3pl/l6HewcU5VvbwkDW80="

stages:
  - compile
  - style
  - test
  - static
  - coverage
  - deploy

os: linux
dist: xenial

before_install:
  - eval "${MATRIX_EVAL}"
  - $COPYBINS
  - $CC --version
  # use sed to replace the SSH URL with the public URL, then init and update submodules
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive

jobs:
  include:
# --- Compile stages ---
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9"
      if: type IN (push, pull_request)
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
      env:
         - MATRIX_EVAL="CC=gcc-5"
      if: type IN (push, pull_request)
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
      env:
         - MATRIX_EVAL="CC=gcc-7"
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
      if: type IN (push, pull_request)
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      if: type IN (push, pull_request)
    - stage: compile
      script: make libs
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
# --- Style check stages ---
    - stage: style
      before_script: git clone https://github.com/uncrustify/uncrustify.git && cd uncrustify && mkdir build && cd build && cmake .. && sudo make install && cd ../..
      script: make ci_uncrustify
      if: type IN (push, pull_request)
# --- Test stages ---
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make utest
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.9
            - rake
            - gcc-multilib
      env:
         - COPYBINS="sudo ln -fs /usr/bin/gcc-4.9 /usr/bin/gcc"
      if: type IN (push, pull_request)
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make utest
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - rake
            - gcc-multilib
      env:
         - COPYBINS="sudo ln -fs /usr/bin/gcc-5 /usr/bin/gcc"
      if: type IN (push, pull_request)
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make utest
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - rake
            - gcc-multilib
      env:
         - COPYBINS="sudo ln -fs /usr/bin/gcc-7 /usr/bin/gcc"
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make CC=clang utest
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - gcc-multilib
            - lcov
      env:
        - MATRIX_EVAL="CC=clang"
        - COPYBINS="sudo ln -fs /usr/bin/clang-3.8 /usr/bin/clang"
      if: type IN (push, pull_request)
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make CC=clang utest
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
            - gcc-multilib
            - lcov
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++-4.0"
        - COPYBINS="sudo ln -fs /usr/bin/clang-4.0 /usr/bin/clang"

      if: type IN (push, pull_request)
    - stage: test
      before_script: pip install --user gcovr==3.3
      script: make CC=clang utest
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - gcc-multilib
            - lcov
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++-5.0"
        - COPYBINS="sudo ln -fs /usr/bin/clang-5.0 /usr/bin/clang"
# --- Static analysis stages ---
    - stage: static
      before_install:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      script:
        - 'echo "Do not build for Coverity Scan"'
        - 'exit 0'
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
        coverity_scan:
          project:
            name: "melexis/mlx90632-library"
            description: "Melexis 90632 Driver library"
          notification_email: ${COVERITY_MAIL}
          build_command_prepend: "make clean"
          build_command:   "make libs"
          branch_pattern: master
      on:
        branch: master
      env:
        - COPYBINS="sudo ln -fs /usr/bin/gcc-6 /usr/bin/gcc"
# --- Coverage stages ---
    - stage: coverage
      before_script:
        - pip install --user gcovr==3.3
        - gem install coveralls-lcov
        - sudo ln -fs /usr/bin/gcov-6 /usr/bin/gcov
        - git clone --branch=v1.13 https://github.com/linux-test-project/lcov.git && cd lcov && sudo make install && cd -
      script:
        - make coverage
        - coveralls-lcov --repo-token ${COVERALLS_TOKEN} build/lcov.info
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - rake
            - gcc-multilib
      if: type IN (push, pull_request)
      env:
        - COPYBINS="sudo ln -fs /usr/bin/gcc-6 /usr/bin/gcc"
# --- Deploy of docs ---
    - stage: deploy
      # Install dependencies
      addons:
        apt:
          packages:
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
      script: make doxy
      deploy:
        provider: pages
        skip_cleanup: true
        local_dir: build/html/doxygen/html/
        github_token: $GITHUB_TOKEN
        on:
          branch: master
